CREATE DATABASE abc_orders;

USE abc_orders;

SELECT *
FROM orders
LIMIT 20;

DESCRIBE orders;
DESCRIBE account_managers;
DESCRIBE products;
DELETE FROM account_managers;

SET SQL_SAFE_UPDATES=0

DROP TABLE account_managers

SET SQL_SAFE_UPDATES=1;

SELECT *
FROM orders;

SELECT city
FROM orders
LIMIT 5;

USE abc_orders;
DESCRIBE abc_orders;

SELECT *
FROM orders
LIMIT 20;


DESCRIBE orders;

UPDATE orders
SET order_date = STR_TO_DATE(order_date, '%m/%d/%Y');

UPDATE orders
SET ship_date = STR_TO_DATE(ship_date, '%m/%d/%Y');

DESCRIBE orders;
SELECT *
FROM orders
LIMIT 10;

ALTER TABLE orders
MODIFY COLUMN order_date date,
MODIFY COLUMN ship_date date;

DESCRIBE orders;

SET SQL_SAFE_UPDATES=1;


SELECT order_no, COUNT(order_no)
FROM orders
GROUP BY order_no
HAVING COUNT(order_no) > 1;

SELECT COUNT(order_no) 
FROM orders
GROUP BY order_no
HAVING COUNT(order_no) > 1;

SELECT *
FROM orders
WHERE order_no = "5768-2" OR "6159-2";





-- 1. What is the total revenue generated by each product category?
SELECT product_category,
		ROUND(SUM(total), 2) AS revenue
FROM products
JOIN orders
ON products.product_id = orders.product_id
GROUP BY product_category;

-- 2.How many unique products have been ordered?
SELECT DISTINCT(COUNT(product_name)) AS unik_product
FROM products;

SELECT COUNT(product_name) AS unik_order, product_name
FROM products
GROUP BY product_name;

-- 3. What is the total revenue generated each year?
SELECT EXTRACT(YEAR FROM order_date) AS unik_year,
				ROUND(SUM(total), 2) AS total_revenue
FROM orders
GROUP BY unik_year;



-- 4. What is the date of the latest and earliest order?
SELECT MIN(order_date) AS earliest_date,
		MAX(order_date) AS latest_date
FROM orders;

-- 6. What product category has the lowest average price of products?

SELECT product_category,
		ROUND(AVG(cost_price), 2) AS avg_price
FROM products
JOIN orders
ON products.product_id = orders.product_id
GROUP BY product_category
ORDER BY avg_price ASC
LIMIT 1;

-- 7. What are the top 10 highest performing products?
SELECT product_name,
		ROUND(SUM(total), 2) AS total_revenue
FROM orders
JOIN products
USING(product_id)
GROUP BY product_name
ORDER BY total_revenue DESC
LIMIT 10;


-- 8. Show the total revenue and profit generated by each account_manager?
SELECT account_manager,
		ROUND(SUM(total), 2) AS revenue,
		ROUND(SUM(total) - SUM(cost_price), 2) AS profit
FROM orders
JOIN account
USING (account_id)
GROUP BY account_manager
ORDER BY revenue DESC;

--  9. What is the name, city and account manager of the highest selling product in 2017?
SELECT product_name, city, account_manager, ROUND(SUM(total), 2) AS total_revenue
FROM products
JOIN orders
USING (product_id)
JOIN account
USING(account_id)
WHERE EXTRACT(YEAR from order_date) = 2017
GROUP BY product_name, account_manager, city
ORDER BY total_revenue DESC
LIMIT 1;

		
       

-- 10. Find the mean amount spent per order by each Customer type?
SELECT customer_type,
		ROUND(AVG(total), 2) AS mean_amount
FROM orders
GROUP BY customer_type;

-- 11. What is the 5th highest selling product? 
SELECT product_name, ROUND(SUM(total), 2) AS sales
FROM products
JOIN orders
USING (product_id)
GROUP BY product_name
ORDER BY sales DESC
LIMIT 5;




-- Your Expected answer is  # product_name : UGen Ultra Professional Cordless Optical Suite,  Revenue:	68699.41




SELECT YEAR(order_date) AS year, ROUND(SUM(total), 2) AS total_revenue
FROM orders
GROUP BY year
ORDER BY year;
